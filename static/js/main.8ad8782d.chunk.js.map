{"version":3,"sources":["actions/fetch_api_data.js","components/Header.js","components/CustomBar.js","components/CustomLine.js","components/Dashboard.js","components/TextArea.js","components/ZoomWidget.js","components/main.js","reducers/fetch_weather.js","reducers/fetch_location.js","reducers/fetch_conditions.js","reducers/reducers.js","store/store.js","App.js","registerServiceWorker.js","index.js"],"names":["fetchAPIResponse","type","city","dispatch","axios","get","concat","then","response","payload","data","main","coord","catch","err","console","log","targetObjects","list","slice","days","map","obj","dt_txt","temperature","temp","humidity","pressure","Header","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","viewBox","d","onClick","props","triggerTransition","Component","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","CustomLine","react_chartjs_2_es","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","width","height","options","title","display","text","fontColor","maintainAspectRatio","legend","scales","xAxes","ticks","fontSize","Dashboard","wrapperState","apiConditions","CustomLine_CustomLine","apiResponse","temperatureTitle","humidityTitle","pressureTitle","connect","state","FetchWeatherReducer","weatherData","apiLocation","FetchWeatherLocation","location","FetchCurrentConditions","conditions","TextArea","boxPosition","placeholder","onChange","triggerParentUpdateInput","triggerParentUpdateClick","ZoomWidget","position","triggerZoomIn","triggerZoomOut","Map","ReactMapboxGl","accessToken","Main","_this","componentWillMount","FetchAPIResponse","value","zoom","center","zoomPosition","cityBoxPosition","nextProps","setState","lon","lat","e","target","currentZoom","nextZoomPosState","nextWrapperState","nextBoxState","Header_Header","widgetsTransition","bind","components_Dashboard","style","containerStyle","padding","margin","lib","id","layout","icon-image","icon-size","coordinates","TextArea_TextArea","search","changeHandler","ZoomWidget_ZoomWidget","setZoomIn","setZoomOut","bindActionCreators","fetchWeatherData","arguments","length","undefined","action","objectSpread","fetchLocation","fetchConditions","reducers","combineReducers","FetchWeather","FetchLocation","FetchConditions","middleware","applyMiddleware","logger","thunk","StoreRef","createStore","Reducers","App","es","store","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kNAEO,SAASA,EAAiBC,EAAMC,GACnC,OAAO,SAASC,GAEJ,WAARF,EAEAG,IAAMC,IAAN,qDAAAC,OAA+DJ,EAA/D,yDAA2HK,KAAK,SAAAC,GAC7HL,EAAS,CAACF,KAAK,mBAAoBQ,QAASD,EAASE,KAAKC,OAC1DR,EAAS,CAACF,KAAK,iBAAkBQ,QAASD,EAASE,KAAKE,UACxDC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAKhBV,IAAMC,IAAN,sDAAAC,OAAgEJ,EAAhE,yDAA4HK,KAAK,SAAAC,GAE9H,IAAIS,EAAgBT,EAASE,KAAKQ,KAAKC,MAAM,EAAG,IAC5CC,EAAgBH,EAAcI,IAAI,SAACC,GAAD,OAASA,EAAIC,OAAOJ,MAAM,GAAI,KAChEK,EAAgBP,EAAcI,IAAI,SAACC,GAAD,OAASA,EAAIX,KAAKc,OACpDC,EAAgBT,EAAcI,IAAI,SAACC,GAAD,OAASA,EAAIX,KAAKe,WACpDC,EAAgBV,EAAcI,IAAI,SAACC,GAAD,OAASA,EAAIX,KAAKgB,WAExDxB,EAAS,CAACF,KAAK,gBAAiBQ,QAAS,CAACW,EAAMI,EAAaE,EAAUC,OACvEd,MAAM,SAAAC,GACLC,QAAQC,IAAIF,UCxBHc,cACnB,SAAAA,IAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,6EAGb,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,QAAQ,eACtCJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaE,EAAE,6GAQjCL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,qBACDH,EAAAC,EAAAC,cAAA,OAAKI,QAASV,KAAKW,MAAMC,kBAAmBL,UAAU,wBACnDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BApBWM,qBCC9BlC,EAAO,CACXmC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACEC,gBAAiB,uBACjBC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBAClBzC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OCiBhB0C,GDZkBR,wBCarC,SAAAQ,IAAc,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,GAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,6EAGZ,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAM3C,KAAQ,CACVmC,OAAQd,KAAKW,MAAMG,OACnBC,SAAU,CACR,CACEQ,MAAM,EACNC,YAAa,GACbR,gBAAiB,qBACjBC,YAAa,oBACbQ,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,oBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB1D,KAAMqB,KAAKW,MAAMhC,QAIvB2D,MAAO,IACPC,OAAQ,IACRC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM3C,KAAKW,MAAM8B,MACjBG,UAAW,WAEbC,qBAAqB,EACrBC,OAAQ,CACNJ,SAAS,GAEXK,OAAQ,CACRC,MAAO,CAAC,CACJC,MAAO,CACLC,SAAU,kBA9CYrC,cCtBlCsC,cACJ,SAAAA,IAAc,OAAArD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,GAAArD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,6EAGZ,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,2CAAAhC,OAA6CyB,KAAKW,MAAMyC,eACpEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,eACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBP,KAAKW,MAAM0C,cAAc3D,KAA3D,UACCU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,YACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBP,KAAKW,MAAM0C,cAAc1D,SAA3D,MACCS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,YACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBP,KAAKW,MAAM0C,cAAczD,SAA3D,QACCQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACgD,EAAD,CAAY3E,KAAMqB,KAAKW,MAAM4C,YAAY,GAAIzC,OAAQd,KAAKW,MAAM4C,YAAY,GAAId,MAAOzC,KAAKW,MAAM6C,mBAClGpD,EAAAC,EAAAC,cAACgD,EAAD,CAAY3E,KAAMqB,KAAKW,MAAM4C,YAAY,GAAIzC,OAAQd,KAAKW,MAAM4C,YAAY,GAAId,MAAOzC,KAAKW,MAAM8C,gBAClGrD,EAAAC,EAAAC,cAACgD,EAAD,CAAY3E,KAAMqB,KAAKW,MAAM4C,YAAY,GAAIzC,OAAQd,KAAKW,MAAM4C,YAAY,GAAId,MAAOzC,KAAKW,MAAM+C,0BArBtF7C,aAqCT8C,kBARf,SAAyBC,GACvB,MAAO,CACLL,YAAeK,EAAMC,oBAAoBC,YACzCC,YAAeH,EAAMI,qBAAqBC,SAC1CZ,cAAeO,EAAMM,uBAAuBC,aAIjCR,CAAyBR,GC1CnBiB,cACnB,SAAAA,IAAc,OAAAtE,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,GAAAtE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,6EAGZ,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAhC,OAAoByB,KAAKW,MAAM0D,cAC3CjE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB+D,YAAY,kBAAkBC,SAAUvE,KAAKW,MAAM6D,2BACpFpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,QAASV,KAAKW,MAAM8D,0BAAhD,cAP8B5D,aCAjB6D,cACnB,SAAAA,IAAe,OAAA5E,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,GAAA5E,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,6EASb,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAhC,OAAiByB,KAAKW,MAAMgE,WACxCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,QAASV,KAAKW,MAAMiE,gBAC/CxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,QAASV,KAAKW,MAAMkE,yBAbhBhE,qBCSlCiE,QAAMC,GAAc,CACxBC,YAAa,iGAGTC,cACJ,SAAAA,EAAYtE,GAAO,IAAAuE,EAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACjBC,EAAApF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMW,KAYRwE,mBAAqB,WACnBD,EAAKvE,MAAMyE,iBAAiB,UAAW,UACvCF,EAAKvE,MAAMyE,iBAAiB,WAAW,WAbvCF,EAAKtB,MAAQ,CACXyB,MAAO,GACPlH,KAAM,CAAC,KAAM,KACbmH,KAAM,CAAC,IACPC,OAAQ,CAAC,IAAK,MACdnC,aAAc,SACdoC,aAAc,cACdC,gBAAiB,yBATFP,wEAmBjBlF,KAAKW,MAAMyE,iBAAiB,UAAWpF,KAAK4D,MAAMyB,OAClDrF,KAAKW,MAAMyE,iBAAiB,WAAYpF,KAAK4D,MAAMyB,yDAG3BK,GACpBA,EAAU3B,cAAgB/D,KAAKW,MAAMoD,aACvC/D,KAAK2F,SAAS,CACZJ,OAAQ,CAACG,EAAU3B,YAAY6B,IAAKF,EAAU3B,YAAY8B,KAC1DP,KAAM,CAAC,2CAKCQ,GACZ,IAAIT,EAAQS,EAAEC,OAAOV,MACrBrF,KAAK2F,SAAS,CACZN,MAAOA,wCAKT,IAAIW,EAAchG,KAAK4D,MAAM0B,KAAK,GAClCtF,KAAK2F,SAAS,CACZL,KAAM,CAACU,EAAc,0CAKvB,IAAIA,EAAchG,KAAK4D,MAAM0B,KAAK,GAClCtF,KAAK2F,SAAS,CACZL,KAAM,CAACU,EAAc,iDAKvB,IAAIC,EAIAC,EAIAC,EANmCF,EAAhB,eADDjG,KAAK4D,MAAM4B,aACyB,cAAmC,cAI5DU,EAAX,UADDlG,KAAK4D,MAAMR,aACoB,SAA8B,SAItC+C,EAA1B,yBADDnG,KAAK4D,MAAM6B,gBAC+B,wBAAyC,wBAEpGzF,KAAK2F,SAAS,CACZH,aAAcS,EACd7C,aAAc8C,EACdT,gBAAiBU,qCAKnB,OACE/F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8F,EAAD,CAAQxF,kBAAmBZ,KAAKqG,kBAAkBC,KAAKtG,QACvDI,EAAAC,EAAAC,cAACiG,EAAD,CACEnD,aAAcpD,KAAK4D,MAAMR,aACzBI,iBAAgB,oBAChBC,cAAa,aACbC,cAAa,iBAEftD,EAAAC,EAAAC,cAACwE,EAAD,CACE0B,MAAM,+CACNjB,OAAQvF,KAAK4D,MAAM2B,OACnBD,KAAMtF,KAAK4D,MAAM0B,KACjBmB,eAAgB,CACdlE,OAAQ,QACRmE,QAAS,EACTC,OAAQ,GAEVjG,QAASV,KAAKqG,kBAAkBC,KAAKtG,OACrCI,EAAAC,EAAAC,cAACsG,EAAA,MAAD,CACE1I,KAAK,SACL2I,GAAG,SACHC,OAAQ,CAAEC,aAAc,YAAaC,YAAa,MAClD5G,EAAAC,EAAAC,cAACsG,EAAA,QAAD,CAASK,YAAajH,KAAK4D,MAAM2B,WAGrCnF,EAAAC,EAAAC,cAAC4G,EAAD,CAAU7C,YAAarE,KAAK4D,MAAM6B,gBAAiBhB,yBAA0BzE,KAAKmH,OAAOb,KAAKtG,MAAOwE,yBAA0BxE,KAAKoH,cAAcd,KAAKtG,QACvJI,EAAAC,EAAAC,cAAC+G,EAAD,CAAY1C,SAAU3E,KAAK4D,MAAM4B,aAAcZ,cAAe5E,KAAKsH,UAAUhB,KAAKtG,MAAO6E,eAAgB7E,KAAKuH,WAAWjB,KAAKtG,gBAtGnHa,aAwHJ8C,kBAZf,SAAyBC,GACvB,MAAO,CACLL,YAAaK,EAAMC,oBAAoBC,YACvCC,YAAaH,EAAMI,qBAAqBC,SACxCZ,cAAeO,EAAMM,uBAAuBC,aAIhD,SAA8B/F,GAC5B,OAAOoJ,YAAmB,CAAEpC,iBAAkBnH,GAAoBG,IAGrDuF,CAA+CsB,oCC9H/CwC,EATU,WAEP,IAFQ7D,EAER8D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFgB,CAC9B5D,YAAY,IACT+D,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAIV,MAHmB,kBAAhBC,EAAO3J,OACN0F,EAAK9D,OAAAgI,EAAA,EAAAhI,CAAA,GAAO8D,EAAP,CAAcE,YAAa+D,EAAOnJ,WAEpCkF,GCCAmE,EAPO,WAEJ,IAFKnE,EAEL8D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFa,CAC3BzD,SAAU,IACP4D,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEV,MADmB,mBAAhBC,EAAO3J,OAA4B0F,EAAM9D,OAAAgI,EAAA,EAAAhI,CAAA,GAAK8D,EAAN,CAAaK,SAAU4D,EAAOnJ,WAClEkF,GCGAoE,EAPS,WAAqC,IAApCpE,EAAoC8D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,CAACvD,WAAW,IAAK0D,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAIjC,MAHmB,qBAAhBC,EAAO3J,OACN0F,EAAK9D,OAAAgI,EAAA,EAAAhI,CAAA,GAAO8D,EAAP,CAAcO,WAAY0D,EAAOnJ,WAEnCkF,GCOpBqE,EANEC,YAAgB,CAC7BrE,oBAAsBsE,EACtBnE,qBAAsBoE,EACtBlE,uBAAwBmE,ICHtBC,EAAaC,YAAgBC,IAAQC,KAG5BC,EAFEC,YAAYC,EAAUN,GCWxBO,mLAVX,OACEzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAUC,MAAOL,GACftI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC1B,EAAD,eALQiC,aCKZmI,EAAcC,QACW,cAA7BC,OAAOjF,SAASkF,UAEe,UAA7BD,OAAOjF,SAASkF,UAEhBD,OAAOjF,SAASkF,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT9K,KAAK,SAAAkL,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhG,QACf2F,UAAUC,cAAcO,WAK1B/K,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAAkL,GACLhL,QAAQgL,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO9J,EAAAC,EAAAC,cAAC6J,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,iBAAwBrB,OAAOjF,UAC3CuG,SAAWtB,OAAOjF,SAASuG,OAIvC,OAGFtB,OAAOuB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAA/K,OAAMgM,iBAAN,sBAEPvB,GAiDV,SAAiCM,GAE/BoB,MAAMpB,GACH9K,KAAK,SAAAC,GAGkB,MAApBA,EAASkM,SACuD,IAAhElM,EAASmM,QAAQtM,IAAI,gBAAgBuM,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMtM,KAAK,SAAAkL,GACjCA,EAAaqB,aAAavM,KAAK,WAC7B0K,OAAOjF,SAAS+G,aAKpB3B,EAAgBC,KAGnBxK,MAAM,WACLE,QAAQC,IACN,mEArEAgM,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMtM,KAAK,WACjCQ,QAAQC,IACN,+GAMJoK,EAAgBC,MCzCxB4B","file":"static/js/main.8ad8782d.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function fetchAPIResponse(type, city){\n    return function(dispatch){\n\n        type == 'weather' ? \n        \n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=0614d13377e407e8c0724c47d862443b`).then(response => {\n           dispatch({type:\"FETCH_CONDITIONS\", payload: response.data.main});\n           dispatch({type:\"FETCH_LOCATION\", payload: response.data.coord});\n        }).catch(err=>{\n            console.log(err)\n        }) \n        \n        :\n\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=0614d13377e407e8c0724c47d862443b`).then(response => {\n\n           let targetObjects = response.data.list.slice(1, 30)\n           let days          = targetObjects.map((obj) => obj.dt_txt.slice(5, -3))\n           let temperature   = targetObjects.map((obj) => obj.main.temp)\n           let humidity      = targetObjects.map((obj) => obj.main.humidity)\n           let pressure      = targetObjects.map((obj) => obj.main.pressure)\n\n           dispatch({type:\"FETCH_WEATHER\", payload: [days, temperature, humidity, pressure]});\n        }).catch(err=>{\n            console.log(err)\n        }) \n   }\n}","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n  constructor() { super() }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <svg className=\"cloud-svg left\" viewBox='0 0 105 105'>\n          <path className=\"cloud-path\" d='M 25,60 \n                                          a 20,20 1 0,0 0,40 \n                                          h 50 \n                                          a 20,20 1 0,0 0,-40 \n                                          a 10,10 1 0,0 -15,-10 \n                                          a 15,15 1 0,0 -35,10  \n                                          z' />\n        </svg>\n        <span className=\"title left\">World Weather App</span>\n       <div onClick={this.props.triggerTransition} className=\"hamburguer-container\">\n          <div className=\"hambuguer-button\"></div>\n          <div className=\"hambuguer-button\"></div>\n          <div className=\"hambuguer-button\"></div>\n          <div className=\"hambuguer-button\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Bar }              from 'react-chartjs-2'\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }\n  ]\n}\n\nexport default class CustomBar extends Component {\n  constructor(){ super() }\n \n  render() {\n    return (\n      <div>\n        <Bar\n          data={data}\n          width={100}\n          height={200}\n          options={{\n            maintainAspectRatio: false,\n            legend: {\n              display: false\n            }\n          }} />\n      </div> \n    );\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Line }             from 'react-chartjs-2'\n\nconst data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }\n    ]\n  }\n\nexport default class CustomLine extends Component {\n  constructor(){ super() }\n \n  render() {\n    return (\n      <div>\n        <Line data = {{\n            labels: this.props.labels,\n            datasets: [\n              {\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(64,92,120,.4)',\n                borderColor: 'rgba(64,92,120,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(64,92,120,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.props.data\n              }\n            ]\n          }}\n          width={100}\n          height={200}\n          options={{\n            title: {\n              display: true,\n              text: this.props.title,\n              fontColor: '#405C78'\n            },\n            maintainAspectRatio: false,\n            legend: {\n              display: false\n            },\n            scales: {\n            xAxes: [{\n                ticks: {\n                  fontSize: 11\n                }\n              }]\n            }\n          }} />\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Bar }              from 'react-chartjs-2'\nimport CustomBar            from './CustomBar'\nimport CustomLine           from './CustomLine'\nimport { connect }          from 'react-redux'\n\n\nclass Dashboard extends Component {\n  constructor(){ super() }\n\n  render() {\n    return (\n      <div>\n        <div className={`left-wrapper scrollbar custom-scrollbar ${this.props.wrapperState}`}>\n          <div className=\"indicators-container\">\n            <div className=\"indicator-title\">Temperature</div>\n             <div className=\"indicator-value\">{this.props.apiConditions.temp} ºC</div>\n              <hr className=\"separator\"/>\n            <div className=\"indicator-title\">Humidity</div>\n             <div className=\"indicator-value\">{this.props.apiConditions.humidity} %</div>\n              <hr className=\"separator\"/>\n            <div className=\"indicator-title\">Pressure</div>\n             <div className=\"indicator-value\">{this.props.apiConditions.pressure} hPa</div>\n              <hr className=\"separator\"/>\n          </div>\n          <div className=\"indicators-container\">\n            <CustomLine data={this.props.apiResponse[1]} labels={this.props.apiResponse[0]} title={this.props.temperatureTitle} />\n            <CustomLine data={this.props.apiResponse[2]} labels={this.props.apiResponse[0]} title={this.props.humidityTitle}/>\n            <CustomLine data={this.props.apiResponse[3]} labels={this.props.apiResponse[0]} title={this.props.pressureTitle}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    apiResponse:   state.FetchWeatherReducer.weatherData,\n    apiLocation:   state.FetchWeatherLocation.location,\n    apiConditions: state.FetchCurrentConditions.conditions\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard) \n ","import React, { Component } from 'react'\n\nexport default class TextArea extends Component {\n  constructor(){ super() }\n \n  render() {\n    return (\n      <div className={`city-container ${this.props.boxPosition}`}>\n        <input className=\"city-text-box\" placeholder=\"Enter a city...\" onChange={this.props.triggerParentUpdateInput}/>\n        <div className=\"go-to-city\" onClick={this.props.triggerParentUpdateClick}>Go</div>\n      </div> \n    )\n  }\n}\n\n\n","import React, { Component } from 'react'\n\nexport default class ZoomWidget extends Component {\n  constructor() { super() }\n\n  /* componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) { \n      //this.setState({value: nextProps.value})\n    }\n  } */\n\n  render() {\n    return (\n      <div className={`zoom-widget ${this.props.position}`}>\n        <div className=\"zoom-plus\" onClick={this.props.triggerZoomIn} ></div>\n        <div className=\"zoom-minus\" onClick={this.props.triggerZoomOut} ></div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component }     from 'react'\nimport { connect }              from 'react-redux'\nimport { bindActionCreators }   from 'redux'\nimport { fetchAPIResponse }     from '../actions/fetch_api_data'\nimport Header                   from './Header'\nimport Dashboard                from './Dashboard'\nimport TextArea                 from './TextArea'\nimport ZoomWidget               from './ZoomWidget'\nimport ReactMapboxGl, { Layer,\n                        Feature} from 'react-mapbox-gl'\n\nconst Map = ReactMapboxGl({\n  accessToken: 'pk.eyJ1IjoiYWRyaXNvbGlkIiwiYSI6ImNqNWt4cGczNjJpZW0yd29kYnJxZXhsaHkifQ.Iq48zrXcmg_xE2kZAbxmEQ'\n})\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: \"\",\n      city: [46.2, 6.1],\n      zoom: [10],\n      center: [6.1, 46.2],\n      wrapperState: 'opened',\n      zoomPosition: 'zoom-opened',\n      cityBoxPosition: 'city-container-opened'\n    }\n  }\n\n  componentWillMount = () => {\n    this.props.FetchAPIResponse('weather', 'Geneva');\n    this.props.FetchAPIResponse('forecast','Geneva');\n  }\n\n  search() {\n    this.props.FetchAPIResponse('weather', this.state.value);\n    this.props.FetchAPIResponse('forecast', this.state.value);\n  }\n\n  componentWillReceiveProps(nextProps){\n     if(nextProps.apiLocation !== this.props.apiLocation){\n      this.setState({\n        center: [nextProps.apiLocation.lon, nextProps.apiLocation.lat],\n        zoom: [9]\n      })\n     }\n   }\n\n  changeHandler(e) {\n    let value = e.target.value;\n    this.setState({\n      value: value\n    });\n  }\n\n  setZoomIn(){\n    let currentZoom = this.state.zoom[0]\n    this.setState({\n      zoom: [currentZoom + 1]\n    })\n  }\n\n  setZoomOut(){\n    let currentZoom = this.state.zoom[0]\n    this.setState({\n      zoom: [currentZoom - 1]\n    })\n  }\n\n  widgetsTransition(){\n    let nextZoomPosState\n    let currentPosition = this.state.zoomPosition\n        currentPosition == 'zoom-opened' ? nextZoomPosState = 'zoom-closed' : nextZoomPosState = 'zoom-opened'\n\n    let nextWrapperState\n    let currentWrapper = this.state.wrapperState\n        currentWrapper == 'opened' ? nextWrapperState = 'closed' : nextWrapperState = 'opened'\n\n    let nextBoxState\n    let currentBox = this.state.cityBoxPosition\n        currentBox == 'city-container-opened' ? nextBoxState = 'city-container-closed' : nextBoxState = 'city-container-opened'\n\n    this.setState({\n      zoomPosition: nextZoomPosState,\n      wrapperState: nextWrapperState,\n      cityBoxPosition: nextBoxState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header triggerTransition={this.widgetsTransition.bind(this)} ></Header>\n        <Dashboard \n          wrapperState={this.state.wrapperState} \n          temperatureTitle={`Temperature ºC`}\n          humidityTitle={`Humidity %`}\n          pressureTitle={`Pressure hPa`}\n        ></Dashboard>\n        <Map\n          style=\"mapbox://styles/mapbox/dark-v9?optimize=true\"\n          center={this.state.center}\n          zoom={this.state.zoom}\n          containerStyle={{\n            height: \"100vh\",\n            padding: 0,\n            margin: 0\n          }}\n          onClick={this.widgetsTransition.bind(this)}>\n          <Layer\n            type=\"symbol\"\n            id=\"marker\"\n            layout={{ \"icon-image\": \"marker-15\", \"icon-size\": 2.5 }}>\n            <Feature coordinates={this.state.center}/>\n          </Layer>\n        </Map>\n        <TextArea boxPosition={this.state.cityBoxPosition} triggerParentUpdateClick={this.search.bind(this)} triggerParentUpdateInput={this.changeHandler.bind(this)}></TextArea>\n        <ZoomWidget position={this.state.zoomPosition} triggerZoomIn={this.setZoomIn.bind(this)} triggerZoomOut={this.setZoomOut.bind(this)}></ZoomWidget>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    apiResponse: state.FetchWeatherReducer.weatherData,\n    apiLocation: state.FetchWeatherLocation.location,\n    apiConditions: state.FetchCurrentConditions.conditions\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({ FetchAPIResponse: fetchAPIResponse }, dispatch);\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Main);\n","const fetchWeatherData = (state = {\n    weatherData:[]\n    }, action) => {\n        if(action.type === \"FETCH_WEATHER\"){ \n            state = {...state, weatherData: action.payload} \n        }\n        return state\n    }\n\nexport default fetchWeatherData\n","const fetchLocation = (state = {\n    location: []\n    }, action) => {\n        if(action.type === \"FETCH_LOCATION\"){ state= {...state, location: action.payload} }\n        return state\n    }\n\nexport default fetchLocation","const fetchConditions = (state = {conditions:[]}, action) => {\n                            if(action.type === \"FETCH_CONDITIONS\"){\n                                state = {...state, conditions: action.payload}\n                            }\n                            return state\n                        }\n\nexport default fetchConditions","import {combineReducers} from 'redux'\nimport FetchWeather      from './fetch_weather'\nimport FetchLocation     from './fetch_location'\nimport FetchConditions   from './fetch_conditions'\n\nconst reducers = combineReducers({\n    FetchWeatherReducer : FetchWeather,\n    FetchWeatherLocation: FetchLocation,\n    FetchCurrentConditions: FetchConditions\n})\n\nexport default reducers","import logger                           from 'redux-logger'\nimport thunk                            from 'redux-thunk'\nimport { applyMiddleware, createStore } from 'redux'\nimport Reducers                         from '../reducers/reducers'\n\nconst middleware = applyMiddleware(logger, thunk)\nconst StoreRef = createStore(Reducers, middleware)\n\nexport default StoreRef\n","import React, { Component } from 'react';\nimport Main from \"./components/main\";\nimport StoreRef from \"./store/store\";\nimport {Provider} from \"react-redux\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={StoreRef}>\n        <div>\n          <Main />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}